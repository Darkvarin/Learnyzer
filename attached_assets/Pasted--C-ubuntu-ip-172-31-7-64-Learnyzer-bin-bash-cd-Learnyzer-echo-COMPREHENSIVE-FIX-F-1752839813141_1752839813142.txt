
^C
ubuntu@ip-172-31-7-64:~/Learnyzer$ #!/bin/bash
cd ~/Learnyzer

echo "üîß COMPREHENSIVE FIX FOR EC2 SERVER..."

# 1. Stop all processes
pm2 delete all 2>/dev/null || true

# 2. Create/update .env with proper format
cat > .env << 'EOF'
NODE_ENV=production
PORT=5000
DATABASE_URL=postgresql://postgres:LearnyzerDB2024@database-1.cro6kewkgl4r.ap-south-1.rds.amazonaws.com:5432/learnyzer
OPENAI_API_KEY=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
TWOFACTOR_API_KEY=75c5f204-57d8-11f0-a562-0200cd936042
RAZORPAY_KEY_ID=rzp_test_KofqomcGyXcjRP
RAZORPAY_KEY_SECRET=dqYO8RMzv4QaEiTOiP97fLka
EOF

# 3. Verify dotenv is at top of server/index.ts
echo "üîç Checking server/index.ts..."
netstat -tlnp | grep :5000 || echo "Port 5000 not listening"ing!" || echo "‚ùå Se
üîß COMPREHENSIVE FIX FOR EC2 SERVER...
[PM2] Applying action deleteProcessId on app [all](ids: [ 0 ])
[PM2] [learnyzer](0) ‚úì
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ id ‚îÇ name               ‚îÇ mode     ‚îÇ ‚Ü∫    ‚îÇ status    ‚îÇ cpu      ‚îÇ memory   ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
üîç Checking server/index.ts...
import dotenv from "dotenv";
dotenv.config();
import express, { type Request, Response, NextFunction } from "express";
import { registerRoutes } from "./routes";
import { setupVite, serveStatic, log } from "./vite";
üìù Fixing all service files...
‚ùå Missing OpenAI import in support-service.ts - FIXING...
‚ùå Missing OpenAI import in enhanced-battle-service.ts - FIXING...
üßπ Cleaning old require syntax...
üì¶ Checking OpenAI package...
rest-express@1.0.0 /home/ubuntu/Learnyzer
‚îî‚îÄ‚îÄ openai@4.28.4

üß™ Testing environment...
[dotenv@17.2.0] injecting env (7) from .env (tip: üîê prevent building .env in docker: https://dotenvx.com/prebuild)
‚úÖ Environment loaded
DATABASE_URL: ‚úÖ Found
OPENAI_API_KEY: ‚úÖ Found
üèóÔ∏è Building application...

> rest-express@1.0.0 build
> vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist

vite v5.4.18 building for production...
transforming...
‚úì 3360 modules transformed.
rendering chunks...
computing gzip size...
../dist/public/index.html                                           3.25 kB ‚îÇ gzip:   1.22 kB
../dist/public/assets/KaTeX_Size3-Regular-CTq5MqoE.woff             4.42 kB
../dist/public/assets/KaTeX_Size4-Regular-Dl5lxZxV.woff2            4.93 kB
../dist/public/assets/KaTeX_Size2-Regular-Dy4dx90m.woff2            5.21 kB
../dist/public/assets/KaTeX_Size1-Regular-mCD8mA8B.woff2            5.47 kB
../dist/public/assets/KaTeX_Size4-Regular-BF-4gkZK.woff             5.98 kB
../dist/public/assets/KaTeX_Size2-Regular-oD1tc_U0.woff             6.19 kB
../dist/public/assets/KaTeX_Size1-Regular-C195tn64.woff             6.50 kB
../dist/public/assets/KaTeX_Caligraphic-Regular-Di6jR-x-.woff2      6.91 kB
../dist/public/assets/KaTeX_Caligraphic-Bold-Dq_IR9rO.woff2         6.91 kB
../dist/public/assets/KaTeX_Size3-Regular-DgpXs0kz.ttf              7.59 kB
../dist/public/assets/KaTeX_Caligraphic-Regular-CTRA-rTL.woff       7.66 kB
../dist/public/assets/KaTeX_Caligraphic-Bold-BEiXGLvX.woff          7.72 kB
../dist/public/assets/KaTeX_Script-Regular-D3wIWfF6.woff2           9.64 kB
../dist/public/assets/KaTeX_SansSerif-Regular-DDBCnlJ7.woff2       10.34 kB
../dist/public/assets/KaTeX_Size4-Regular-DWFBv043.ttf             10.36 kB
../dist/public/assets/KaTeX_Script-Regular-D5yQViql.woff           10.59 kB
../dist/public/assets/KaTeX_Fraktur-Regular-CTYiF6lA.woff2         11.32 kB
../dist/public/assets/KaTeX_Fraktur-Bold-CL6g_b3V.woff2            11.35 kB
../dist/public/assets/KaTeX_Size2-Regular-B7gKUWhC.ttf             11.51 kB
../dist/public/assets/KaTeX_SansSerif-Italic-C3H0VqGB.woff2        12.03 kB
../dist/public/assets/KaTeX_SansSerif-Bold-D1sUS0GD.woff2          12.22 kB
../dist/public/assets/KaTeX_Size1-Regular-Dbsnue_I.ttf             12.23 kB
../dist/public/assets/KaTeX_SansSerif-Regular-CS6fqUqJ.woff        12.32 kB
../dist/public/assets/KaTeX_Caligraphic-Regular-wX97UBjC.ttf       12.34 kB
../dist/public/assets/KaTeX_Caligraphic-Bold-ATXxdsX0.ttf          12.37 kB
../dist/public/assets/KaTeX_Fraktur-Regular-Dxdc4cR9.woff          13.21 kB
../dist/public/assets/KaTeX_Fraktur-Bold-BsDP51OF.woff             13.30 kB
../dist/public/assets/KaTeX_Typewriter-Regular-CO6r4hn1.woff2      13.57 kB
../dist/public/assets/KaTeX_SansSerif-Italic-DN2j7dab.woff         14.11 kB
../dist/public/assets/KaTeX_SansSerif-Bold-DbIhKOiC.woff           14.41 kB
../dist/public/assets/KaTeX_Typewriter-Regular-C0xS9mPB.woff       16.03 kB
../dist/public/assets/KaTeX_Math-BoldItalic-CZnvNsCZ.woff2         16.40 kB
../dist/public/assets/KaTeX_Math-Italic-t53AETM-.woff2             16.44 kB
../dist/public/assets/KaTeX_Script-Regular-C5JkGWo-.ttf            16.65 kB
../dist/public/assets/KaTeX_Main-BoldItalic-DxDJ3AOS.woff2         16.78 kB
../dist/public/assets/KaTeX_Main-Italic-NWA7e6Wa.woff2             16.99 kB
../dist/public/assets/KaTeX_Math-BoldItalic-iY-2wyZ7.woff          18.67 kB
../dist/public/assets/KaTeX_Math-Italic-DA0__PXp.woff              18.75 kB
../dist/public/assets/KaTeX_Main-BoldItalic-SpSLRI95.woff          19.41 kB
../dist/public/assets/KaTeX_SansSerif-Regular-BNo7hRIc.ttf         19.44 kB
../dist/public/assets/KaTeX_Fraktur-Regular-CB_wures.ttf           19.57 kB
../dist/public/assets/KaTeX_Fraktur-Bold-BdnERNNW.ttf              19.58 kB
../dist/public/assets/KaTeX_Main-Italic-BMLOBm91.woff              19.68 kB
../dist/public/assets/KaTeX_SansSerif-Italic-YYjJ1zSn.ttf          22.36 kB
../dist/public/assets/KaTeX_SansSerif-Bold-CFMepnvq.ttf            24.50 kB
../dist/public/assets/KaTeX_Main-Bold-Cx986IdX.woff2               25.32 kB
../dist/public/assets/KaTeX_Main-Regular-B22Nviop.woff2            26.27 kB
../dist/public/assets/KaTeX_Typewriter-Regular-D3Ib7_Hf.ttf        27.56 kB
../dist/public/assets/KaTeX_AMS-Regular-BQhdFMY1.woff2             28.08 kB
../dist/public/assets/KaTeX_Main-Bold-Jm3AIy58.woff                29.91 kB
../dist/public/assets/KaTeX_Main-Regular-Dr94JaBh.woff             30.77 kB
../dist/public/assets/KaTeX_Math-BoldItalic-B3XSjfu4.ttf           31.20 kB
../dist/public/assets/KaTeX_Math-Italic-flOr_0UB.ttf               31.31 kB
../dist/public/assets/KaTeX_Main-BoldItalic-DzxPMmG6.ttf           32.97 kB
../dist/public/assets/KaTeX_AMS-Regular-DMm9YOAa.woff              33.52 kB
../dist/public/assets/KaTeX_Main-Italic-3WenGoN9.ttf               33.58 kB
../dist/public/assets/KaTeX_Main-Bold-waoOVXN0.ttf                 51.34 kB
../dist/public/assets/KaTeX_Main-Regular-ypZvNtVU.ttf              53.58 kB
../dist/public/assets/KaTeX_AMS-Regular-DRggAlZN.ttf               63.63 kB
../dist/public/assets/index-DfcCqErM.css                          286.97 kB ‚îÇ gzip:  45.68 kB
../dist/public/assets/index-3TL2Gb4u.js                         2,218.39 kB ‚îÇ gzip: 604.36 kB

(!) Some chunks are larger than 500 kB after minification. Consider:
- Using dynamic import() to code-split the application
- Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
- Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
‚úì built in 16.67s
‚úò [ERROR] The symbol "openai" has already been declared

    server/services/enhanced-battle-service.ts:8:6:
      8 ‚îÇ const openai = new OpenAI({
        ‚ïµ       ~~~~~~

  The symbol "openai" was originally declared here:

    server/services/enhanced-battle-service.ts:5:6:
      5 ‚îÇ const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });
        ‚ïµ       ~~~~~~

‚úò [ERROR] The symbol "openai" has already been declared

    server/services/support-service.ts:4:6:
      4 ‚îÇ const openai = new OpenAI({
        ‚ïµ       ~~~~~~

  The symbol "openai" was originally declared here:

    server/services/support-service.ts:2:6:
      2 ‚îÇ const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });
        ‚ïµ       ~~~~~~

2 errors
‚ùå Build failed! Checking errors:

  The symbol "openai" was originally declared here:

    server/services/enhanced-battle-service.ts:5:6:
      5 ‚îÇ const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });
        ‚ïµ       ~~~~~~

‚úò [ERROR] The symbol "openai" has already been declared

    server/services/support-service.ts:4:6:
      4 ‚îÇ const openai = new OpenAI({
        ‚ïµ       ~~~~~~

  The symbol "openai" was originally declared here:

    server/services/support-service.ts:2:6:
      2 ‚îÇ const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });
        ‚ïµ       ~~~~~~

2 errors

üîç Looking for OpenAI-related errors:
- Using dynamic import() to code-split the application
‚úò [ERROR] The symbol "openai" has already been declared
      8 ‚îÇ const openai = new OpenAI({
  The symbol "openai" was originally declared here:
      5 ‚îÇ const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });
‚úò [ERROR] The symbol "openai" has already been declared
      4 ‚îÇ const openai = new OpenAI({
  The symbol "openai" was originally declared here:
      2 ‚îÇ const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

üìä FINAL STATUS:
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ id ‚îÇ name               ‚îÇ mode     ‚îÇ ‚Ü∫    ‚îÇ status    ‚îÇ cpu      ‚îÇ memory   ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
Command 'netstat' not found, but can be installed with:
sudo apt install net-tools
Port 5000 not listening
ubuntu@ip-172-31-7-64:~/Learnyzer$ cd ~/Learnyzer

echo "üîç DEBUGGING OPENAI IMPORTS..."

echo "=== Checking all service files for OpenAI imports ==="
for file in server/services/*.ts; do
    echo "--- $file ---"
    head -10 "$file" | grep -E "(import|OpenAI|openai)"
done

echo ""
echo "=== Checking package.json for OpenAI ==="
grep -A2 -B2 "openai" package.json

echo ""
echo "=== Checking built JavaScript for OpenAI ==="
if [ -f "dist/index.js" ]; then
    grep -n "openai\|OpenAI" dist/index.js | head -5
else
    echo "dist/index.js not found - build failed"
fi

echo ""
echo "=== Testing Node.js OpenAI import ==="
" console.error('‚ùå OpenAI error:', e.message);test' });
üîç DEBUGGING OPENAI IMPORTS...
=== Checking all service files for OpenAI imports ===
--- server/services/ai-service.ts ---
import type { Request, Response } from "express";
import { storage } from "../storage";
import { z } from "zod";
import { fromZodError } from "zod-validation-error";
import { AnalyticsService } from "./analytics-service";
import OpenAI from "openai";
// Initialize OpenAI client with environment variable
const openai = new OpenAI({
--- server/services/analytics-service.ts ---
import { storage } from "../storage";
--- server/services/auth-service.ts ---
import type { Request, Response } from "express";
import { storage } from "../storage";
import bcrypt from "bcrypt";
import passport from "passport";
import { insertUserSchema } from "@shared/schema";
import { nanoid } from "nanoid";
import { ZodError } from "zod";
import { fromZodError } from "zod-validation-error";
--- server/services/battle-service.ts ---
import type { Request, Response } from "express";
import { storage } from "../storage";
import { insertBattleSchema } from "@shared/schema";
import { ZodError } from "zod";
import { fromZodError } from "zod-validation-error";
import { z } from "zod";
--- server/services/coin-service.ts ---
import { db } from "../../db";
import { userCoins, coinTransactions, users } from "@shared/schema";
import { eq, desc } from "drizzle-orm";
import type { Request, Response } from "express";
--- server/services/course-service.ts ---
import type { Request, Response } from "express";
import { storage } from "../storage";
import { insertCourseSchema } from "@shared/schema";
import { ZodError } from "zod";
import { fromZodError } from "zod-validation-error";
import { z } from "zod";
--- server/services/enhanced-battle-service.ts ---
import { db } from '@db';
import { battles, battleQuestions, battleSpectators, powerUps, userPowerUps, battleParticipants, users, userCoins, coinTransactions } from '@shared/schema';
import { eq, and, desc, sql } from 'drizzle-orm';
import OpenAI from "openai";
const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });
// Initialize OpenAI client
const openai = new OpenAI({
--- server/services/lead-generation.ts ---
import { db } from "@db";
import { users } from "@shared/schema";
import { desc, and, gte, lte, isNotNull, or, eq, like, sql } from "drizzle-orm";
import * as XLSX from "xlsx";
--- server/services/leaderboard-service.ts ---
import { Request, Response } from "express";
import { db } from "@db";
import { storage } from "../storage";
import { users } from "@shared/schema";
import { desc, eq, sql } from "drizzle-orm";
--- server/services/mock-test-service.ts ---
import OpenAI from "openai";
// Initialize OpenAI client with environment variable
const openai = new OpenAI({
--- server/services/notification-service.ts ---
import { Request, Response } from 'express';
--- server/services/otp-service.ts ---
import axios from 'axios';
--- server/services/payment-service.ts ---
import Razorpay from 'razorpay';
import { Request, Response } from 'express';
import { db } from '../../db';
import { users } from '../../shared/schema';
import { eq } from 'drizzle-orm';
--- server/services/pdf-service.ts ---
import puppeteer from 'puppeteer';
import { Request, Response } from 'express';
--- server/services/simple-subscription-service.ts ---
import { db } from "@db";
import { users, usageTracking } from "@shared/schema";
import { eq, and, gte } from "drizzle-orm";
--- server/services/sitemap-generator.ts ---
import type { Express, Request, Response } from "express";
--- server/services/subscription-service.ts ---
import { db } from "@db";
import { users } from "@shared/schema";
// import { usageTracking, subscriptionLimits } from "@shared/schema"; // Temporarily commented for compatibility
import { eq, and, gte, desc } from "drizzle-orm";
--- server/services/support-service.ts ---
import OpenAI from "openai";
const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });
const openai = new OpenAI({
--- server/services/user-service.ts ---
import type { Request, Response } from "express";
import { storage } from "../storage";
import { ZodError } from "zod";
import { fromZodError } from "zod-validation-error";
import { z } from "zod";
--- server/services/wellness-service.ts ---
import { Request, Response } from "express";
import { storage } from "../storage";

=== Checking package.json for OpenAI ===
    "multer": "^2.0.1",
    "node-fetch": "^3.3.2",
    "openai": "^4.28.4",
    "openid-client": "^6.6.2",
    "passport": "^0.7.0",

=== Checking built JavaScript for OpenAI ===
dist/index.js not found - build failed

=== Testing Node.js OpenAI import ===
‚úÖ OpenAI require() works
‚úÖ OpenAI constructor works
